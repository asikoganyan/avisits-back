<?php

namespace App\Http\Requests\Employee;

use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Http\Exceptions\HttpResponseException;
use Illuminate\Contracts\Validation\Validator;
use Illuminate\Http\Request;


class EmployeeStoreRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules(Request $request)
    {
        $chain = $request->route('chain');
        return [
            'first_name'             =>'required|string|max:255',
            'last_name'             =>'required|string|max:255',
            'father_name'           =>'required|string|max:255',
            'photo'                 =>'string|max:255',
            'sex'                   =>'string|max:255',
            'birthday'              =>'string|max:255',
            'email'                 =>'required|string|email|max:255|unique:employees,email,NULL,id,chain_id,'.$chain,
            'phone'                 =>'string|max:255|unique:employees,phone,NULL,id,chain_id,'.$chain,
//            'phone_2'               =>'string|max:255',
            'address'               =>'string|max:255',
            'card_number'           =>'numeric',
            'card_number_optional'  =>'numeric',
            'deposit'               =>'numeric',
            'bonuses'               =>'numeric',
            'invoice_sum'           =>'numeric',
            'position_id'           =>'integer',
            'public_position'       =>'string',
            'comment'               =>'string',
        ];
    }
    /**
     * @return array
     */
    public function messages()
    {
        return parent::messages(); // TODO: Change the autogenerated stub
    }

    public function failedValidation(Validator $validator)
    {
        throw new HttpResponseException(response()->json(['ValidationError' => $validator->messages()],422));
    }
}
